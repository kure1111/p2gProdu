public with sharing class NEU_OM_CreateItemsLines 
{
	public Customer_Quote__c record;
	private List<Quote_Item_Line__c> quoteItemLines = null;
	public String numerodelinea {get;set;}
	public Quote_Item_Line__c nuevo_item {get;set;}
	public String extensionitemname {get;set;}
	public string units {get;set;}
	public string shippingweight {get;set;}
	public string precio {get;set;}
	public string volumen {get;set;}
	public string freight_mode {get;set;}
	public string service_type {get;set;}
	public string moneda_seleccionada {get;set;}
	public List<SelectOption> lista_monedas {get;set;}
	public string pallet_seleccionado {get;set;}
	public List<SelectOption> lista_pallets {get;set;}

	ApexPages.StandardController con;
    
    public NEU_OM_CreateItemsLines() {}
    
    public NEU_OM_CreateItemsLines(ApexPages.StandardController stdController) 
    {
		con = stdController;

		System.debug('id ---> ' + con.getRecord().id);
		
        
        try 
        { 
        	record =  Database.query('select Id, Name,'+(UserInfo.isMultiCurrencyOrganization()== true ? 'CurrencyIsoCode ,' : '')+'  Account_for__c, Account_for_Record_Type__c, Freight_Mode__c, Service_Type__c, Only_Warehouse_Service__c,FolioResume__c from Customer_Quote__c where id = \''+ con.getRecord().id+'\'');
        } 
        catch(Exception ee){record = new Customer_Quote__c();}
        
        numerodelinea = '';
        extensionitemname= '';
        units = '';
        shippingweight = '';
        volumen = '';
        freight_mode = record.Freight_Mode__c;
        service_type = record.Service_Type__c;
        
        quoteItemLines = [select Id, Amount__c, Name,Item_Name__r.HS_Code_Text__c, Price__c, List_Price__c, Item_Price__c, Extension_Item_Name__c, Total_Shipping_Weight_Kgs__c, 
        Import_Export_Quote__c, Weight_Kgs__c , Units__c , Category__c, Product_Item_DC__c, Subcategory_DC__c, Total_Taxes_Form__c, Sales_Tax__c, Duty__c, Incoterm__c, Customs_Value__c, 
        Additional_Import_Taxes_Detail__c, Import_Export_Quote__r.Country_ofLoad__r.ISO_Code__c, Import_Export_Quote__r.Country_ofDischarge__r.ISO_Code__c, Import_Export_Quote__r.Freight_Mode__c, 
		Item_Name__c, Item_Name__r.Name, Item_Name__r.Master_Box_Length_cm__c, Item_Name__r.Master_Box_Width_cm__c, Item_Name__r.Master_Box_Height_cm__c, Item_Name__r.Master_Box_Volume_m3__c, 
		Item_Name__r.Master_Box_Packing_Weight_kg__c, Container_Type__c, Container_Type__r.Name, Item_Name__r.Freight_Class__c, Item_Name__r.NMFC__c, Item_Name__r.Packaging_Type__c,
		Container_Type__r.Cargo_Weight_Kg__c, Item_Name__r.Sourcing_Item_Code__c, Item_Name__r.Item_Description__c, Pallet_Code__c, pallet_warehouse__c, HS_Code__c, Clave_de_Servicio__c, 
        Clave_de_Servicio__r.Clave_SAT__c, Clave_de_Servicio__r.Material_PeligrosoCP__c, Material_Peligroso_Cat__c, Material_Peligroso_Cat__r.name, Material_Peligroso_Cat__r.Clave_SAT__c,
        Embalaje_Cat__c, Embalaje_Cat__r.Clave_SAT__c, Embalaje_Cat__r.name,Peso_Neto__c, CP_Fraccion_Arancelaria_IE__c, Pedimento__c,CE_Descripcion_de_Producto_PAK__c,CE_Descripcion_de_Uso__c
		FROM Quote_Item_Line__c 
		where Import_Export_Quote__c =: record.Id 
		order by Name];

		//setting pallet list
		List<pallet_warehouse__c> pallets = [select Id, Name from pallet_warehouse__c where Import_export__c =: record.Id];
		lista_pallets = new List<SelectOption>();
		lista_pallets .add(new SelectOption('', '--None--'));

		for(pallet_warehouse__c p : pallets) {

			lista_pallets .add(new SelectOption(p.Id, p.Name));

		}
		
		if(record.Only_Warehouse_Service__c)
		{
			for(Quote_Item_Line__c qil : quoteItemLines)
			{
				if(qil.Item_Name__r.Master_Box_Length_cm__c != null)
					qil.Item_Name__r.Master_Box_Length_cm__c = qil.Item_Name__r.Master_Box_Length_cm__c / 100;
				if(qil.Item_Name__r.Master_Box_Width_cm__c != null)
					qil.Item_Name__r.Master_Box_Width_cm__c = qil.Item_Name__r.Master_Box_Width_cm__c / 100;
			}
		}
		
        lista_monedas = new List<SelectOption>();
        if(UserInfo.isMultiCurrencyOrganization()== true)
        {
			for(String lu: NEU_CurrencyUtils.getCurrencyIsoCodeList())
            {
                if(lu == NEU_CurrencyUtils.getCurrencyIsoCode(record))
                {
                	lista_monedas .add(new SelectOption(lu,lu));
                    break;
                }
            }
             
            for(String lu: NEU_CurrencyUtils.getCurrencyIsoCodeList())
            {
                if(lu != NEU_CurrencyUtils.getCurrencyIsoCode(record))
                    lista_monedas .add(new SelectOption(lu,lu));
            }
        }
        else
            lista_monedas.add(new SelectOption(NEU_CurrencyUtils.getCurrencyIsoCode(record),NEU_CurrencyUtils.getCurrencyIsoCode(record)));
            
        moneda_seleccionada = NEU_CurrencyUtils.getCurrencyIsoCode(record);
        numerodelinea = string.valueOf(quoteItemLines.size()+1);
        nuevo_item = new Quote_Item_Line__c();
        Sourcing_Item__c new_item = new Sourcing_Item__c();
        nuevo_item.Item_Name__r = new_item;
        
        while(numerodelinea.length()<3)
        {
            numerodelinea ='0'+numerodelinea;
        }
        quoteItemLines = null;
    }
    
    //pintar todas las lineas del import export
    public List<Quote_Item_Line__c> getquoteItemLines()
    {
        if(quoteItemLines==null)
        {
			quoteItemLines = [select Id, Amount__c, Name, Item_Name__r.HS_Code_Text__c, Price__c, List_Price__c, Item_Price__c, Extension_Item_Name__c, Total_Shipping_Weight_Kgs__c, 
			Weight_Kgs__c , Units__c , Category__c, Product_Item_DC__c, Subcategory_DC__c, Item_Name__c, Import_Export_Quote__c, Total_Taxes_Form__c, Sales_Tax__c, Duty__c, Incoterm__c, 
			Customs_Value__c, Additional_Import_Taxes_Detail__c,  Total_Shipping_Volume_m3__c, Import_Export_Quote__r.Country_ofLoad__r.ISO_Code__c, 
			Import_Export_Quote__r.Country_ofDischarge__r.ISO_Code__c, Import_Export_Quote__r.Freight_Mode__c, Item_Name__r.Name, Item_Name__r.Master_Box_Length_cm__c, 
			Item_Name__r.Master_Box_Width_cm__c, Item_Name__r.Master_Box_Height_cm__c, Item_Name__r.Master_Box_Volume_m3__c, Item_Name__r.Master_Box_Packing_Weight_kg__c, Container_Type__c, 
			Container_Type__r.Name, Item_Name__r.Freight_Class__c, Item_Name__r.NMFC__c, Item_Name__r.Packaging_Type__c, Container_Type__r.Cargo_Weight_Kg__c, Item_Name__r.Sourcing_Item_Code__c, 
			Item_Name__r.Item_Description__c, Pallet_Code__c, pallet_warehouse__c, HS_Code__c, Clave_de_Servicio__c, Clave_de_Servicio__r.Clave_SAT__c, Clave_de_Servicio__r.Material_PeligrosoCP__c, 
            Material_Peligroso_Cat__c, Material_Peligroso_Cat__r.name, Material_Peligroso_Cat__r.Clave_SAT__c, Embalaje_Cat__c, Embalaje_Cat__r.Clave_SAT__c, Embalaje_Cat__r.name,Peso_Neto__c,CP_Fraccion_Arancelaria_IE__c, 
            Pedimento__c,CE_Descripcion_de_Producto_PAK__c,CE_Descripcion_de_Uso__c
			from Quote_Item_Line__c 
           	where Import_Export_Quote__c =: record.Id 
            order by Name];
            
            if(record.Only_Warehouse_Service__c)
			{
				for(Quote_Item_Line__c qil : quoteItemLines)
				{
					if(qil.Item_Name__r.Master_Box_Length_cm__c != null)
						qil.Item_Name__r.Master_Box_Length_cm__c = qil.Item_Name__r.Master_Box_Length_cm__c / 100;
					if(qil.Item_Name__r.Master_Box_Width_cm__c != null)
						qil.Item_Name__r.Master_Box_Width_cm__c = qil.Item_Name__r.Master_Box_Width_cm__c / 100;
				}
			}
        }

        return quoteItemLines;
    }
    
   	public String decimalSep
   	{
       	get
       	{
			if(decimalSep == null)
           		decimalSep = NEU_Utils.getDecimalSep();
           		
         	return decimalSep;
       	}
       	set
       	{
       		decimalSep = value;
    	}
	}
	
   	public String thousandSep
   	{
		get
       	{
        	if(thousandSep == null)
           		thousandSep = NEU_Utils.getThousandSep();
           		
         	return thousandSep;
       	}
       	set
       	{
        	thousandSep = value;
       	}
   	}
    
    public void update_lineas_ie()
    {
    	if(quoteItemLines != null && quoteItemLines.size()>0)
    	{
    		string errors = '';
    		boolean update_lines = true;
    		
    		//actualizar items y sus lineas
    		decimal total_peso = 0;
    		decimal total_volume = 0;
    		Map<Id, Sourcing_Item__c> map_items = new Map<Id, Sourcing_Item__c>();
    		for(Quote_Item_Line__c qil: quoteItemLines)
    		{
    			if((record.Service_Type__c == 'FTL' || record.Service_Type__c == 'FP' || record.Service_Type__c == 'FO' || record.Service_Type__c == 'FCL') && qil.Container_Type__c == null)
		    	{
		    		errors += 'The Line <strong>'+qil.Name+'</strong> doesn\'t has a <strong>Container Type</strong>.<br/>';
		    		update_lines = false;
		    	}
    			
    			if(qil.Container_Type__c != null && qil.Container_Type__r.Cargo_Weight_Kg__c != null && qil.Container_Type__r.Cargo_Weight_Kg__c < qil.Total_Shipping_Weight_Kgs__c)
    			{
					errors += 'The Line <strong>'+qil.Name+'</strong> has a <strong>Total Shipping Weight (Kgs)</strong> bigger than the <strong>Container Cargo Weight</strong>. Please, select a correct <strong>Container Type</strong>.<br/>';
					update_lines = false;
    			}
    			
    			if(qil.Item_Name__c != null)
    			{
	    			qil.Item_Name__r.Name = qil.Extension_Item_Name__c;
		            qil.Item_Name__r.Item_Price__c = qil.Price__c;
					
					system.debug('CORRECCIONES : Service type ' + service_type);
					system.debug('CORRECCIONES : Freight mode ' + freight_mode);
					
					if(record.Only_Warehouse_Service__c || service_type == 'MAYOREO' || freight_mode == 'Air' || (freight_mode == 'Sea' && service_type == 'LCL') || ((freight_mode == 'Road' || freight_mode == 'Rail') && service_type == 'LTL'))
					{
						if(record.Only_Warehouse_Service__c)
						{
							qil.Item_Name__r.Master_Box_Length_cm__c = (qil.Item_Name__r.Master_Box_Length_cm__c != null ? qil.Item_Name__r.Master_Box_Length_cm__c * 100 : null);
			    			qil.Item_Name__r.Master_Box_Width_cm__c = (qil.Item_Name__r.Master_Box_Width_cm__c != null ? qil.Item_Name__r.Master_Box_Width_cm__c * 100 : null);
			    			qil.Item_Name__r.Master_Box_Height_cm__c = (qil.Item_Name__r.Master_Box_Height_cm__c != null ? qil.Item_Name__r.Master_Box_Height_cm__c : null);
						}
						
						if(qil.Total_Shipping_Weight_Kgs__c != null && qil.Units__c != null)
			            	qil.Item_Name__r.Weight_Kgs__c = NEU_Utils.safedecimal(qil.Total_Shipping_Weight_Kgs__c/qil.Units__c);
			            else
			            	qil.Item_Name__r.Weight_Kgs__c = 0;
					}
					else
					{
						if(qil.Total_Shipping_Weight_Kgs__c != null && qil.Units__c != null)
							qil.Item_Name__r.Weight_Kgs__c = NEU_Utils.safedecimal(qil.Total_Shipping_Weight_Kgs__c/qil.Units__c);
			            if(qil.Total_Shipping_Volume_m3__c != null && qil.Units__c != null)
			            {
			            	qil.Item_Name__r.Master_Box_Length_cm__c =NEU_Utils.safedecimal((qil.Total_Shipping_Volume_m3__c/qil.Units__c)*100);
			            	qil.Item_Name__r.Master_Box_Width_cm__c =100;
			            	qil.Item_Name__r.Master_Box_Height_cm__c =100;
			            }
					}		            
	            
		            map_items.put(qil.Item_Name__c, qil.Item_Name__r);
    			}
    			
    			total_peso += neu_utils.safedecimal(qil.Total_Shipping_Weight_Kgs__c);
    			total_volume += neu_utils.safedecimal(qil.Total_Shipping_Volume_m3__c);
    		}
    		
    		if(update_lines)
    		{
	    		try
	    		{
		    		update 	quoteItemLines;
		    		
		    		if(map_items != null && map_items.values().size()>0)
		    			update map_items.values();
	    		}
	    		catch(Exception ex){new ApexPages.message(ApexPages.severity.ERROR,''+ex);}
	    		
	    		//actualizar lineas de services
	    		List<Import_Export_Fee_Line__c> query_lineas_fee = [select Id, Name, Units__c, Service_Rate_Name__c, Service_Rate_Name__r.RecordTypeId, Service_Rate_Name__r.Rate_Type__c, Service_Rate_Name__r.Container_Type__r.Cargo_Volume_m3__c, Service_Rate_Name__r.Pallet_Type__r.Cargo_Volume_m3__c, Service_Rate_Name__r.Pallet_Type__r.Cargo_Weight_Kg__c, Service_Rate_Name__r.Container_Type__r.Cargo_Weight_Kg__c, Service_Rate_Name__r.Volumetric_Factor__c, Service_Rate_Name__r.Container_Type__c, Service_Rate_Name__r.Max_Kgs__c, Service_Rate_Name__r.Max_M3__c, Service_Rate_Name__r.Pallet_Type__c  from Import_Export_Fee_Line__c where Import_Export_Quote__c =: record.Id];
	    		decimal unidades_calculadas = 1;
	    		decimal weight_vol_factor = 0;
	    		decimal unidades_calculadas2 = 1;
	    		for(Import_Export_Fee_Line__c iefl: query_lineas_fee) 
	    		{
					if(iefl.Service_Rate_Name__r.Rate_Type__c == 'Per Kg')
	                {
						unidades_calculadas = (total_peso >0 ? total_peso : 1);
	                  	weight_vol_factor = (total_volume > 0 && iefl.Service_Rate_Name__r.Volumetric_Factor__c != null ? total_volume*iefl.Service_Rate_Name__r.Volumetric_Factor__c  : 0);
	                 	if(weight_vol_factor > unidades_calculadas)
	                    	unidades_calculadas = weight_vol_factor;
	                }
	                else if(iefl.Service_Rate_Name__r.Rate_Type__c == 'Per TON')
	                {
	                	unidades_calculadas = (total_peso >0 ? total_peso/1000 : 1);
	                }
	                else if(iefl.Service_Rate_Name__r.Rate_Type__c == 'Per M3')
	                {
	                  	unidades_calculadas = (total_volume >0 ? total_volume : 1); 
	                  	weight_vol_factor = (total_peso > 0 && iefl.Service_Rate_Name__r.Volumetric_Factor__c != null ? total_peso/iefl.Service_Rate_Name__r.Volumetric_Factor__c  : 0);
	                  	if(weight_vol_factor > unidades_calculadas)
	                      	unidades_calculadas = weight_vol_factor;
	                }
	                else if(iefl.Service_Rate_Name__r.Rate_Type__c == 'Per Container')
	                {
	                  	unidades_calculadas = (total_volume >0 && iefl.Service_Rate_Name__r.Container_Type__c != null && iefl.Service_Rate_Name__r.Container_Type__r.Cargo_Volume_m3__c >0 ? total_volume/iefl.Service_Rate_Name__r.Container_Type__r.Cargo_Volume_m3__c : 1);
	                  	unidades_calculadas2 = (total_peso >0 && iefl.Service_Rate_Name__r.Container_Type__c != null && iefl.Service_Rate_Name__r.Container_Type__r.Cargo_Weight_Kg__c >0 ? total_peso/iefl.Service_Rate_Name__r.Container_Type__r.Cargo_Weight_Kg__c : 1);
	                  	if(unidades_calculadas2 > unidades_calculadas)
	                     	unidades_calculadas = unidades_calculadas2; 
	                   
	                }
	                else if(iefl.Service_Rate_Name__r.Rate_Type__c == 'Per W/M')
	                {
	                  	unidades_calculadas = (total_peso > 0 && iefl.Service_Rate_Name__r.Volumetric_Factor__c != null ? total_peso/iefl.Service_Rate_Name__r.Volumetric_Factor__c  : 0);
	                  	weight_vol_factor = unidades_calculadas;
	                  	unidades_calculadas2 = (total_volume > 0 ? total_volume : 0);
	                  	if(unidades_calculadas2 > unidades_calculadas)
	                     	unidades_calculadas = unidades_calculadas2; 
	                }
	                else if(iefl.Service_Rate_Name__r.Rate_Type__c == 'Fixed' && (iefl.Service_Rate_Name__r.Max_Kgs__c != null || iefl.Service_Rate_Name__r.Max_M3__c != null))    
	                {
	                  	unidades_calculadas = (total_peso > 0 && iefl.Service_Rate_Name__r.Max_Kgs__c != null ? total_peso/iefl.Service_Rate_Name__r.Max_Kgs__c  : 0);
	                  	unidades_calculadas2 = (total_volume > 0 && iefl.Service_Rate_Name__r.Max_M3__c != null ? total_volume/iefl.Service_Rate_Name__r.Max_M3__c  : 0);
	                  	if(unidades_calculadas2 > unidades_calculadas)
	                     	unidades_calculadas = unidades_calculadas2; 
	                }     
	                else if(iefl.Service_Rate_Name__r.Rate_Type__c == 'Per Pallet')
	                {
	                  	unidades_calculadas = (total_volume >0 && iefl.Service_Rate_Name__r.Pallet_Type__c != null && iefl.Service_Rate_Name__r.Pallet_Type__r.Cargo_Volume_m3__c >0 ? total_volume/iefl.Service_Rate_Name__r.Pallet_Type__r.Cargo_Volume_m3__c : 1);
	                  	unidades_calculadas2 = (total_peso >0 && iefl.Service_Rate_Name__r.Pallet_Type__c != null && iefl.Service_Rate_Name__r.Pallet_Type__r.Cargo_Weight_Kg__c >0 ? total_peso/iefl.Service_Rate_Name__r.Pallet_Type__r.Cargo_Weight_Kg__c : 1);
	                  	if(unidades_calculadas2 > unidades_calculadas)
	                     	unidades_calculadas = unidades_calculadas2; 
	                } 
	                else 
	                	continue;
	                                
	    			iefl.Units__c = unidades_calculadas;
	    			
	    			unidades_calculadas = 1;
	                weight_vol_factor = 0;
	                unidades_calculadas2 = 1;
	    		}
	    		
	    		if(query_lineas_fee != null && query_lineas_fee.size()>0)
	    		{
	    			try
	    			{
	    				update query_lineas_fee;
	    			}
	    			catch(Exception ex){new ApexPages.message(ApexPages.severity.ERROR,''+ex);}
	    		}
	    		
	    		quoteItemLines = null;	
    		}
    		else
    			ApexPages.addMessage(new ApexPages.message(ApexPages.severity.ERROR,errors));
    	}
    }
    
    public void crearlineaquoteitem()
    {
    	boolean create_line = true;
    	
    	if((record.Service_Type__c == 'FTL' || record.Service_Type__c == 'FP' || record.Service_Type__c == 'FO' || record.Service_Type__c == 'FCL') && nuevo_item.Container_Type__c == null)
    	{
    		ApexPages.addMessage(new ApexPages.message(ApexPages.severity.ERROR,'The <strong>Container Type</strong> is required.'));
    		create_line = false;
    	}
    	
    	if(nuevo_item != null && nuevo_item.Total_Shipping_Weight_Kgs__c > 0)
		
    	{
	    	List<Container_Type__c> container_type = [select Id, Name, Cargo_Weight_Kg__c from Container_Type__c where Id =: nuevo_item.Container_Type__c];
	    	if(container_type.size() > 0)
	    	{
				System.debug('container_type > 0');
	    		if(container_type[0].Cargo_Weight_Kg__c < nuevo_item.Total_Shipping_Weight_Kgs__c)
	    		{
	    			ApexPages.addMessage(new ApexPages.message(ApexPages.severity.ERROR,'The New Line has a <strong>Total Shipping Weight (Kgs)</strong> bigger than the <strong>Container Cargo Weight</strong>. Please, select a correct <strong>Container Type</strong>.'));
	    			create_line = false;
	    		}
	    	}else{
			System.debug('container_type = 0');

			}

    	}
    	
        if(ApexPages.currentPage().getParameters().get('test') != null)
        {
            shippingweight='1';
            precio='1';
            units='1';
            extensionitemname='1';
            numerodelinea='1';
        }
    
    	if(create_line)
    	{
	        Quote_Item_Line__c Quote_Item_Line = new Quote_Item_Line__c();  
	        Quote_Item_Line.Import_Export_Quote__c =record.Id;
	        
	        while(numerodelinea.length() < 3)
	        {
	            numerodelinea ='0'+numerodelinea;
	        }
	        
	        Quote_Item_Line.Name = numerodelinea;
	       
	        if(nuevo_item != null)
	        {
	            Quote_Item_Line.Units__c = nuevo_item.Units__c;
	            Quote_Item_Line.Total_Shipping_Weight_Kgs__c = nuevo_item.Total_Shipping_Weight_Kgs__c;
	            Quote_Item_Line.Price__c = nuevo_item.Price__c;
	            Quote_Item_Line.Total_Shipping_Volume_m3__c = nuevo_item.Total_Shipping_Volume_m3__c;
                Quote_Item_Line.Peso_Neto__c = nuevo_item.Peso_Neto__c;

			}

			Quote_Item_Line.HS_Code__c = (nuevo_item.HS_Code__c != null && nuevo_item.HS_Code__c != null ? nuevo_item.HS_Code__c : '');
			Quote_Item_Line.Pallet_Code__c = nuevo_item.Pallet_Code__c;
	       	Quote_Item_Line.Item_Supplier_Owner__c =record.Account_for__c;
            
            //NUEVO
            Quote_Item_Line.Material_Peligroso_Cat__c = nuevo_item.Material_Peligroso_Cat__c;
            Quote_Item_Line.Embalaje_Cat__c = nuevo_item.Embalaje_Cat__c;
            Quote_Item_Line.Clave_de_Servicio__c = nuevo_item.Clave_de_Servicio__c;
            Quote_Item_Line.CE_Descripcion_de_Producto_PAK__c = nuevo_item.CE_Descripcion_de_Producto_PAK__c;
            Quote_Item_Line.CE_Descripcion_de_Uso__c = nuevo_item.CE_Descripcion_de_Uso__c;
            
            if(nuevo_item.CP_Fraccion_Arancelaria_IE__c!= null)
                Quote_Item_Line.CP_Fraccion_Arancelaria_IE__c = nuevo_item.CP_Fraccion_Arancelaria_IE__c;
            
            if(nuevo_item.Pedimento__c!= null)
                Quote_Item_Line.Pedimento__c = nuevo_item.Pedimento__c;
            
            
            
            Catalogo_SAT__c cs =[SELECT Id,name, Clave_SAT__c  FROM Catalogo_SAT__c where id =:  nuevo_item.Clave_de_Servicio__c limit 1];
             
//	        if(extensionitemname != null)
	        	Quote_Item_Line.Extension_Item_Name__c=cs.name;//extensionitemname;
            
	        NEU_CurrencyUtils.setCurrencyIsoCode(Quote_Item_Line,moneda_seleccionada);
	        List<Sourcing_Item__c> lista_items = new List<Sourcing_Item__c>();
	        Sourcing_Item__c Sourcing_Item = new Sourcing_Item__c();    
	        Sourcing_Item.Name =cs.name;// (extensionitemname != null && extensionitemname != '' ? extensionitemname : numerodelinea);
	    	Sourcing_Item.Freight_Class__c = (nuevo_item != null && nuevo_item.Item_Name__r.Freight_Class__c != null ? nuevo_item.Item_Name__r.Freight_Class__c : '');
	    	Sourcing_Item.NMFC__c = (nuevo_item != null && nuevo_item.Item_Name__r.NMFC__c != null ? nuevo_item.Item_Name__r.NMFC__c : '');
	    	Sourcing_Item.Packaging_Type__c = (nuevo_item != null && nuevo_item.Item_Name__r.Packaging_Type__c != null ? nuevo_item.Item_Name__r.Packaging_Type__c : '');
	    	Sourcing_Item.Sourcing_Item_Code__c = (nuevo_item != null && nuevo_item.Item_Name__r.Sourcing_Item_Code__c != null ? nuevo_item.Item_Name__r.Sourcing_Item_Code__c : '');
	    	Sourcing_Item.Item_Description__c = (nuevo_item != null && nuevo_item.Item_Name__r.Item_Description__c != null ? nuevo_item.Item_Name__r.Item_Description__c : '');
	    	
            if(nuevo_item != null)
                Quote_Item_Line.Total_Shipping_Volume_m3__c =nuevo_item.Total_Shipping_Volume_m3__c;
            if(nuevo_item != null)
                Sourcing_Item.Item_Price__c = nuevo_item.Price__c;
            Sourcing_Item.Account_Owner__c = record.Account_for__c;
            if(nuevo_item != null)
                Sourcing_Item.Weight_Kgs__c = nuevo_item.Total_Shipping_Weight_Kgs__c/nuevo_item.Units__c;
            Sourcing_Item.Units_x_Master_Box__c = 1;
            if(nuevo_item != null)
                Quote_Item_Line.Container_Type__c = nuevo_item.Container_Type__c;
			if(pallet_seleccionado != '')
				Quote_Item_Line.pallet_warehouse__c = pallet_seleccionado;
            if(nuevo_item != null)
            {
            	if(record.Only_Warehouse_Service__c || service_type == 'MAYOREO' || freight_mode == 'Air' || (freight_mode == 'Sea' && service_type == 'LCL') || ((freight_mode == 'Road' || freight_mode == 'Rail') && service_type == 'LTL'))
            	{
            		if(record.Only_Warehouse_Service__c)
            		{
            			Sourcing_Item.Master_Box_Length_cm__c = (nuevo_item != null && nuevo_item.Item_Name__r.Master_Box_Length_cm__c != null ? nuevo_item.Item_Name__r.Master_Box_Length_cm__c * 100 : null);
		    			Sourcing_Item.Master_Box_Width_cm__c = (nuevo_item != null && nuevo_item.Item_Name__r.Master_Box_Width_cm__c != null ? nuevo_item.Item_Name__r.Master_Box_Width_cm__c * 100 : null);
		    			Sourcing_Item.Master_Box_Height_cm__c = (nuevo_item != null && nuevo_item.Item_Name__r.Master_Box_Height_cm__c != null ? nuevo_item.Item_Name__r.Master_Box_Height_cm__c : null);
            		}
            		else
            		{
		        		Sourcing_Item.Master_Box_Length_cm__c = (nuevo_item != null && nuevo_item.Item_Name__r.Master_Box_Length_cm__c != null ? nuevo_item.Item_Name__r.Master_Box_Length_cm__c : null);
		    			Sourcing_Item.Master_Box_Width_cm__c = (nuevo_item != null && nuevo_item.Item_Name__r.Master_Box_Width_cm__c != null ? nuevo_item.Item_Name__r.Master_Box_Width_cm__c : null);
		    			Sourcing_Item.Master_Box_Height_cm__c = (nuevo_item != null && nuevo_item.Item_Name__r.Master_Box_Height_cm__c != null ? nuevo_item.Item_Name__r.Master_Box_Height_cm__c : null);
            		}
            		
	    			Sourcing_Item.Master_Box_Packing_Weight_kg__c = (nuevo_item != null && nuevo_item.Item_Name__r.Master_Box_Packing_Weight_kg__c != null ? nuevo_item.Item_Name__r.Master_Box_Packing_Weight_kg__c : null);
            	}
            	else
            	{
                	Sourcing_Item.Master_Box_Length_cm__c =(nuevo_item.Total_Shipping_Volume_m3__c/nuevo_item.Units__c)*100;
            		Sourcing_Item.Master_Box_Width_cm__c =100;
            		Sourcing_Item.Master_Box_Height_cm__c =100;
            	}
            }
            
            NEU_CurrencyUtils.setCurrencyIsoCode(Sourcing_Item,moneda_seleccionada);
            lista_items.add(Sourcing_Item);
	            
	        try
	        {
	                insert lista_items;
	        }
	        catch (Exception ex){}
	        
	        if(lista_items.size() > 0)
	        {
	            Quote_Item_Line.Item_Name__c = lista_items[0].Id;
	        }
	           
	        try
	        {
	                insert Quote_Item_Line;
	        }
	        catch (Exception ex){}
	        
	        numerodelinea = string.valueOf(decimal.valueof(numerodelinea)+1);
	        nuevo_item = new Quote_Item_Line__c();
	        Sourcing_Item__c new_item = new Sourcing_Item__c();
	        nuevo_item.Item_Name__r = new_item;
	        while(numerodelinea.length()<3)
	        {
	            numerodelinea = '0'+numerodelinea;
	        }
	        extensionitemname = '';
	        units = '';
	        shippingweight = '';
	        precio = '';
	        volumen = '';
	        moneda_seleccionada = '';
	        quoteItemLines = null;
			pallet_seleccionado = '';
    	}
    }
    
    public void test ()
    {
        string a = '';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
        a='';
    }
}