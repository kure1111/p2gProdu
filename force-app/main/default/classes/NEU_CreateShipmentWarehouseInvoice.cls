public with sharing class NEU_CreateShipmentWarehouseInvoice 
{
	public Shipment__c record;
	
	ApexPages.StandardController con;

	/* Las marcadas cmo fixed (Warehouse Fixed Rate) se cobran fijas las marcadas como monthly(Warehouse Monthly Rate) se prorratean entre los d√≠as del mes*/

	public NEU_CreateShipmentWarehouseInvoice(ApexPages.StandardController stdController) 
	{
        con = stdController;
        
        try 
        { 
			record = [select Id, Name, CurrencyIsoCode, Account_for__c, Contact__c from Shipment__c where Id =: con.getRecord().id];
        } 
        catch(Exception ee){record = new Shipment__c();}
	}
	
	public pagereference create_invoice()
	{
        //revisar si ese shipment ya tiene invoice crear otra o no
		List<Invoice__c> invoices = [select Id, Name from Invoice__c where Shipment__c =: record.Id limit 1];
		
		if(invoices.size() > 0)
		{
			PageReference pgReturnPage;
	        String returnUrl = '/' + invoices[0].Id;
	        pgReturnPage = new PageReference(returnUrl);
	        pgReturnPage.setRedirect(true);
	        return pgReturnPage;
		}
		else
		{
			List<Shipment_Fee_Line__c> shipment_lines = [select Id, Name, Service_Rate_Name__r.Name, Units__c, Shipment_Sell_Price__c, CurrencyIsoCode
			from Shipment_Fee_Line__c where Shipment__c =: record.Id and Service_Rate_Name__r.Warehouse_Monthly_Rate__c = true];


			if(shipment_lines.size() == 0)
			{
				ApexPages.addMessage(new ApexPages.message(ApexPages.severity.ERROR,'This Shipment not contain any line with a Service Rate marked as <strong>Warehouse Monthly Rate</strong>. <a href="/'+record.Id+'">Return Shipment</a>'));
				return null;
			}
			else
			{
				List<Shipment_Consolidation_Data__c> shipment_consolidation = [select Id, Name, Import_Export_Quote__c from Shipment_Consolidation_Data__c where Shipment__c =: record.Id limit 1];
				if(shipment_consolidation.size() > 0)
				{
					Invoice__c new_invoice = new Invoice__c();
					new_invoice.Name = 'New Invoice';
					new_invoice.Date_of_Invoice__c = system.today();
					new_invoice.CurrencyIsoCode = record.CurrencyIsoCode;
					new_invoice.Account__c = record.Account_for__c;
					new_invoice.Contact__c = record.Contact__c;
					new_invoice.Import_Export_Quote_Order__c = shipment_consolidation[0].Import_Export_Quote__c;
					new_invoice.Shipment__c = record.Id;
					
					try
					{
						insert new_invoice;

                        //for pallets
                        Integer totalPallets = 0;
                        List<AggregateResult> all_entries = [
                                select Shipment_Item_Line__r.pallet_warehouse__r.Id, Shipment_Item_Line__r.pallet_warehouse__r.Name
                                from Inventory_Entry__c
                                where Remaining_Units__c > 0 and Shipment__c = :record.Id
                                group by Shipment_Item_Line__r.pallet_warehouse__r.Id, Shipment_Item_Line__r.pallet_warehouse__r.Name
                        ];

                        for(AggregateResult ae : all_entries)
                        {
                            totalPallets++;
                        }
						
						List<Invoice_Line__c> new_invoice_lines = new List<Invoice_Line__c>();
						List<Invoice_Service_Line__c> new_invoice_service_lines = new List<Invoice_Service_Line__c>();
						
						for(Shipment_Fee_Line__c sl : shipment_lines)
						{
							Invoice_Line__c new_invoice_line = new Invoice_Line__c();
							new_invoice_line.Name = 'New Invoice Line';
							new_invoice_line.Invoice__c = new_invoice.Id;
							new_invoice_line.Import_Export_Quote_Order__c = new_invoice.Import_Export_Quote_Order__c;
							new_invoice_line.Shipment__c = new_invoice.Shipment__c;
							new_invoice_line.Concept__c = sl.Service_Rate_Name__r.Name;
							new_invoice_line.Units__c = sl.Units__c;
							new_invoice_line.Unit_Price__c = sl.Shipment_Sell_Price__c;
							//new_invoice_line.Amount__c = sl.Units__c * sl.Shipment_Sell_Price__c;
                            new_invoice_line.Amount__c = (sl.Shipment_Sell_Price__c / totalPallets) * sl.Units__c;
							new_invoice_line.CurrencyIsoCode = sl.CurrencyIsoCode;
							new_invoice_lines.add(new_invoice_line);
							
							Invoice_Service_Line__c new_invoice_service_line = new Invoice_Service_Line__c();
							new_invoice_service_line.Name = record.Name+'-'+sl.Name;
							new_invoice_service_line.Amount__c = new_invoice_line.Amount__c;
							new_invoice_service_line.Invoice__c = new_invoice.Id;
							new_invoice_service_line.Shipment_Service_Line__c = sl.Id;
							new_invoice_service_line.CurrencyIsoCode = sl.CurrencyIsoCode;
							new_invoice_service_lines.add(new_invoice_service_line);
						}
						
						try
						{
							insert new_invoice_lines;
							insert new_invoice_service_lines;
							
							PageReference pgReturnPage;
					        String returnUrl = '/' + new_invoice.Id;
					        pgReturnPage = new PageReference(returnUrl);
					        pgReturnPage.setRedirect(true);
					        return pgReturnPage;
						}
						catch(Exception ex){ApexPages.addMessage(new ApexPages.message(ApexPages.severity.ERROR,'Error: '+ex)); return null;}
					}
					catch(Exception ex){ApexPages.addMessage(new ApexPages.message(ApexPages.severity.ERROR,'Error: '+ex)); return null;}
				}
				else
					return null;
			}
		}
		
		return null;
	}


	public void bypass()
	{
		integer a= 1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;

		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;

		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;

		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;

		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;

		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;

		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;

		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;

		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;

		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;

		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;

		a= a+1;
		a= a+1;


	}


	public void bypass2()
	{
		integer a= 1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;

		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;

		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;

		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;

		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;

		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;

		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;

		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;

		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;

		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;

		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;
		a= a+1;

		a= a+1;
		a= a+1;


	}
}