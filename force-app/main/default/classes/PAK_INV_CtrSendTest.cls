@isTest()
public class PAK_INV_CtrSendTest {
    @testSetup
    static void Setup(){
        List<Account> list_accounts = NEU_Utils.getAccounts('Customer,');
        Account account_test = list_accounts[0];
        account_test.Name = 'Bimbo';
        account_test.Credit_Limit__c = 1000000;
        account_test.Venta_Sap__c='Credito';
        account_test.Segment__c='Nuevo';
        account_test.Workplace__c=null;
        insert account_test;
        User userT = [select id,managerId, userRole.Name  from user where id =: UserInfo.getUserId() limit 1];
        Rol_Margen__c rolMargen = TestDataFactory.createRolMargen(userT.userRole.Name);//Director Comercial ,Director Regional
        Country__c country = new Country__c(Name='Mxico');
        insert country;
        State__c state = new State__c(Name='Sonora',Country__c=country.Id,Iso_Code__c='SON',ISO_Code_2c__c='SO',Zone_Planner_email__c='kuresa@gmaidl.com',Active__c=true);
        insert state;
        Location__c location = new Location__c(Name='xalapa', State__c=state.Id,Country__c=country.Id);
        insert location;
        Container_Type__c container = new Container_Type__c(Name='Super tracto Camion',Type__c='Road',Cargo_Weight_Kg__c=22222);
        insert container;
        Account_Address__c address1 = new  Account_Address__c();
        address1.Name ='Direccion test';
        address1.Account__c=account_test.Id;
        address1.Type__c='Shipping Address';
        address1.Calle_cat__c='AVENIDA ARBOLEDA';
        address1.Address__c='Arbolada 57B, Conj U los Sauces V, 50200 San José Guadalupe, Méx., México';
        address1.Address_Coordinates__Latitude__s =28.7276823;
        address1.Address_Coordinates__Longitude__s=-106.123545;
        insert address1;
        Customer_Quote__c quote = new Customer_Quote__c();
        String recordTypeId = Schema.SObjectType.Customer_Quote__c.getRecordTypeInfosByName().get('Import-Export Quote').getRecordTypeId();
        quote.RecordTypeId = recordTypeId;
        quote.Name='.';
        quote.Account_for__c = account_test.Id;
        quote.Team__c = 'P2G';
        quote.Quotation_Status__c = 'Quote being prepared';
        quote.Customer_Reference__c = 'holi';
        quote.Valid_From__c = system.today();
        quote.Valid_Until__c = system.today();
        quote.Comercio_Exterior__c = 'No';
        quote.Freight_Mode__c = 'Road';
        quote.Service_Mode__c = 'NATIONAL';
        quote.Service_Type__c = 'FTL';
        quote.CurrencyIsoCode = 'MXN';
        quote.Country_ofLoad__c = location.Country__c;
        quote.State_of_Load__c = location.State__c;
        quote.Site_of_Load__c = location.Id;
        quote.Country_ofDischarge__c = location.Country__c;
        quote.State_of_Discharge__c = location.State__c;
        quote.Site_of_Discharge__c = location.Id;
        quote.ETD__c = Date.today();
        quote.ETA__c = Date.today();
        quote.Community_Status__c = 'CUSTOMER CREATED';
        quote.Pricing_Executive__c= userT.Id;
        quote.Operations_Exec__c = userT.Id;
        insert quote;
        Shipment__c new_shipment = new Shipment__c();
        new_shipment.Name = 'SP-FN-23-000783';
        new_shipment.Freight_Mode__c= 'Road';
        new_shipment.Service_Type__c= 'FTL';
        new_shipment.ETA_Point_of_Discharge__c = Date.valueOf('2023-05-2');
        new_shipment.ETD_from_Point_of_Load__c = Date.valueOf('2023-05-12');
        new_shipment.ETA_Time_Point_of_Discharge__c = Time.newInstance(08,0,0,0);
        new_shipment.ETD_Time_from_Point_of_Load__c = Time.newInstance(08,0,0,0);
        new_shipment.Route__c = quote.Route__c;
        new_shipment.Account_for__c= account_test.Id;
        new_shipment.Country_of_Discharge__c = country.Id;
        new_shipment.Country_of_Load__c = country.Id;
        new_shipment.State_of_Discharge__c = state.Id;
        new_shipment.State_of_Load__c = state.Id;
        new_shipment.Site_of_Discharge__c = location.Id;
        new_shipment.Site_of_Load__c = location.Id;
        new_shipment.Container_Type__c = container.Id;
        new_shipment.Service_Mode__c = 'NATIONAL';
        new_shipment.Origin_Address__c = address1.Address__c;
        new_shipment.Account_Origin_Address__c = address1.id;
        new_shipment.Account_Destination_Address__c = address1.Id;
        new_shipment.Destination_Address__c = address1.Address__c;
        new_shipment.Origin_Location__Latitude__s = address1.Address_Coordinates__Latitude__s;
        new_shipment.Origin_Location__Longitude__s = address1.Address_Coordinates__Longitude__s;
        new_shipment.Destination_Location__Latitude__s = address1.Address_Coordinates__Latitude__s;
        new_shipment.Destination_Location__Longitude__s = address1.Address_Coordinates__Longitude__s;
        new_shipment.Traslado_Ingreso__c = 'Ingreso';
        insert new_shipment;
        Invoice__c invo = new Invoice__c();
        String recordType = Schema.SObjectType.Invoice__c.getRecordTypeInfosByName().get('Invoice').getRecordTypeId();
        invo.RecordTypeId = recordType;
        invo.Name = 'Test invoice';
        invo.Type__c = 'Debit Note';
        invo.Date_Invoice_SAP__c = Date.valueOf('2023-06-2');
        invo.Payable_Before__c = Date.valueOf('2023-06-20');
        invo.Account__c = account_test.Id;
        invo.Import_Export_Quote_Order__c = quote.Id;
        invo.Shipment__c = new_shipment.Id;
        insert invo;
        SAP_Service_Type__c sap = new SAP_Service_Type__c();
        sap.Name = 'SERVICIOS LOGISTICOS FN (IC) (FN)';
        sap.Code__c = 'FN-SERV_LOGISTICO_IC';
        insert sap;
        Invoice_Line__c invoLine = new Invoice_Line__c();
        invoLine.Name = 'Test Invoice Line';
        invoLine.Units__c = 23;
        invoLine.Import_Export_Quote_Order__c = quote.Id;
        invoLine.Shipment__c = new_shipment.Id;
        invoLine.Invoice__c = invo.id;
        invoLine.SAP_Service_Type__c = sap.Id;
        insert invoLine;
    }
@isTest
    static void PAK_INV_CtrTest(){
        Invoice__c invo =[SELECT Id FROM Invoice__c WHERE Type__c =: 'Debit Note' LIMIT 1];
        SAP_Service_Type__c sapType =[SELECT Id FROM SAP_Service_Type__c WHERE Code__c = 'FN-SERV_LOGISTICO_IC' LIMIT 1];
        PageReference pageRef = Page.PAK_INV_Send_SAP;
         Test.setCurrentPage(pageRef);
         ApexPages.StandardController sc = new ApexPages.StandardController(invo);
         PAK_INV_Ctr testPak = new PAK_INV_Ctr(sc);
        Test.startTest();
        Test.setMock(HttpCalloutMock.class, new P2G_PAK_INV_CtrMockHttpResponse(1));
        testPak.Send();
        PAK_INV_Ctr.validacion(invo.Id);
        SAP_Service_Type__c sap = new SAP_Service_Type__c();
        sap.Id = sapType.Id;
        sap.Code__c = 'FN-FLET_NACIONAL_IC';
        update sap;
        PAK_INV_Ctr.validacion(invo.Id);
        Test.stopTest();
    }
}